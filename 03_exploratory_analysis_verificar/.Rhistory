# exportar tabelas de TCR
for (i in names(clust_TCR_agrupados)) {
names(clust_TCR_agrupados[i]) <- c("Clones", "Proportion", "CDR3.nt", "CDR3.aa", "V.name",
"D.name", "J.name", "V.end", "D.start", "D.end",
"J.start", "VJ.ins", "VD.ins", "DJ.ins", "Cluster")
write.table(clust_TCR_agrupados[i],
file = paste("data/tcr/", i, "_clones.tsv", sep = ""),
sep = "\t", row.names = FALSE)}
write.table(clust_BCR_agrupados$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`, "teste.txt", sep = "\t")
salvar_dataframe_tsv <- function(df) {
nome_arquivo <- paste("data/bcr/", names(df[1]), ".tsv", sep = "")
write.table(df, file = nome_arquivo, sep = "\t", row.names = FALSE)
}
lapply(clust_BCR_agrupados, salvar_dataframe_tsv)
salvar_dataframe_tsv <- function(df) {
write.table(df, file = nome_arquivo, sep = "\t", row.names = FALSE)
}
for (i in names(clust_BCR_agrupados)) {
nome_arquivo <- paste("data/bcr/", i, ".tsv", sep = "")
salvar_dataframe_tsv()
}
for (i in names(clust_BCR_agrupados)) {
nome_arquivo <- paste("data/bcr/", i, ".tsv", sep = "")
salvar_dataframe_tsv(clust_BCR_agrupados)
}
for (i in names(clust_BCR_agrupados)) {
nome_arquivo <- paste("data/bcr/", i, ".tsv", sep = "")
salvar_dataframe_tsv(clust_BCR_agrupados[i])
}
names(clust_BCR_agrupados)
for (i in names(clust_BCR_agrupados)) {
nomeArquivo = paste("/data/bcr/",i,".tsv")
write.table(clust_BCR_agrupados[i], nomeArquivo, sep = "\t", row.names = FALSE)
}
for (i in names(clust_BCR_agrupados)) {
nomeArquivo = paste("/data/bcr/",i,".tsv", sep = "")
write.table(clust_BCR_agrupados[i], nomeArquivo, sep = "\t", row.names = FALSE)
}
for (i in names(clust_BCR_agrupados)) {
nomeArquivo = paste("/data/bcr/",i,".tsv", sep = "")
write.table(clust_BCR_agrupados[i], file = nomeArquivo, sep = "\t", row.names = FALSE)
}
nomeArquivo
for (i in names(clust_BCR_agrupados)) {
nomeArquivo = paste("data/bcr/",i,".tsv", sep = "")
write.table(clust_BCR_agrupados[i], file = nomeArquivo, sep = "\t", row.names = FALSE)
}
1:length(clust_BCR_agrupados)
for (i in names(clust_BCR_agrupados)) {
nomeArquivo = paste("data/bcr/",i,".tsv", sep = "")
for (j in 1:length(clust_BCR_agrupados)) {
write.table(clust_BCR_agrupados[j], file = nomeArquivo, sep = "\t", row.names = FALSE)
}
}
names(clust_BCR_agrupados)
names_bcr <- names(clust_BCR_agrupados)
write.table(clust_BCR_agrupados[1], file = names_bcr[1], sep = "\t", row.names = FALSE)
# exportar tabelas de TCR
for (i in names(clust_TCR_agrupados)) {
write.delim(clust_TCR_agrupados[i],
file = paste("data/tcr/", i, "_clones.tsv", sep = ""),
row.names = FALSE)}
# exportar tabelas de TCR
for (i in names(clust_TCR_agrupados)) {
write.delim(clust_TCR_agrupados[i],
file = paste("data/tcr/", i, "_clones.tsv", sep = ""),
row.names = FALSE)}
# exportar tabelas de TCR
library(utils)
for (i in names(clust_TCR_agrupados)) {
write.delim(clust_TCR_agrupados[i],
file = paste("data/tcr/", i, "_clones.tsv", sep = ""),
row.names = FALSE)}
# exportar tabelas de TCR
library(pgirmess)
install.packages('pgirmess')
# exportar tabelas de TCR
library(readr)
for (i in names(clust_TCR_agrupados)) {
write_delim(clust_TCR_agrupados[i],
file = paste("data/tcr/", i, "_clones.tsv", sep = ""),
delim = "\t")}
for (i in names(clust_TCR_agrupados)) {
write_delim(as.data.frame(clust_TCR_agrupados[i]),
file = paste("data/tcr/", i, "_clones.tsv", sep = ""),
delim = "\t")}
for (i in names(clust_TCR_agrupados)) {
write_delim(as.data.frame(clust_TCR_agrupados[i]),
file = paste("data/tcr/", i, "_clones.tsv", sep = ""),
delim = "\t")}
salvar_dataframe_tsv <- function(df) {
nome_arquivo <- paste("data/bcr/", names(df[1]), ".tsv", sep = "")
readr::write_delim(df, file = nome_arquivo, delim = "\t")
}
lapply(clust_BCR_agrupados, salvar_dataframe_tsv)
x_name <- names(clust_BCR_agrupados)
x_name
clust_BCR_agrupados[x_name[1]]
x_name[1]
write.table(clust_BCR_agrupados$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`,
file = "data/bcr/130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report.tsv",
sep = "\t")
teste <- clust_BCR_agrupados
x_name <- names(teste)
x_name
names(teste) <- x_name
for (i in names(teste)) {
write.table(teste[i],
file = paste("data/bcr/", i, "_clones.tsv", sep = ""), row.names = FALSE,
sep = "\t")}
write.table(clust_BCR_agrupados$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`,
file = "data/bcr/130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report.tsv",
sep = "\t")
write.table(clust_BCR_agrupados$`130723_UNC9-SN296_0386_BC2E4WACXX_ATCACG_L003_report`,
file = "data/bcr/130723_UNC9-SN296_0386_BC2E4WACXX_ATCACG_L003_report_clones.tsv",
sep = "\t")
x_name
names(teste)
for (i in names(teste)) {
write.table(teste$`i`
file = paste("data/bcr/", i, "_clones.tsv", sep = ""), row.names = FALSE,
for (i in names(teste)) {
write.table(teste$i
file = paste("data/bcr/", i, "_clones.tsv", sep = ""), row.names = FALSE,
for (i in names(teste)) {
write.table(teste$`i`,
file = paste("data/bcr/", i, "_clones.tsv", sep = ""), row.names = FALSE,
sep = "\t")}
#| output: false
# -- pacotes necessarios
library(immunarch)
library(dplyr)
#| output: false
# -- preparando o ambiente de trabalho
dir_data <-
"../../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/"
immdata <- repLoad(paste(dir_data, "outputTrust4_report", sep = ""))
load(paste(dir_data, "metadata.RData", sep = ""))
immdata$meta <- metadata[metadata$sample_id %in%
gsub("_report", "", immdata$meta$Sample),]
remove_NA <- function(df){
df %>%
filter(!is.na(J.name))
}
immdata$data <- lapply(immdata$data, remove_NA)
immdata$data$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`
#| output: false
# -- separacao dos repertorios de TCR e BCR
immdata$meta$Sample <- paste(immdata$meta$sample_id,"_report",sep = "")
immdata$meta$Sample %in% names(immdata$data)
immdata_bcr <- repFilter(immdata,
.method = "by.clonotype",
.query = list(V.name = include("IG")),
.match = "substring")
immdata_tcr <- repFilter(immdata,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
#| output: false
# -- calculo da distancia entre as sequencias
dist_BCR <- seqDist(immdata_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_BCR <- seqCluster(immdata_bcr$data, dist_BCR, .perc_similarity = 0.9)
dist_TCR <- seqDist(immdata_tcr$data[-12],
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_TCR <- seqCluster(immdata_tcr$data[-12], dist_TCR, .perc_similarity = 0.95)
temp <- immdata_tcr$data[12]
temp$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`$J.name
nchar(temp$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`$CDR3.nt)
temp$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`$Cluster <-
c("TRAV9-2/TRAJ17_length_39","TRAV9-2/TRAJ17_length_39")
names(temp)
clust_TCR$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report` <-
as.data.frame(temp$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`)
clust_TCR$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`
clust_TCR$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`
# funcao para agrupar os dataframes
agrupar_por_cluster <- function(df){
df %>%
group_by(Cluster) %>%
mutate(Clones = sum(Clones),
Proportion = sum(Proportion)) %>%
ungroup() %>%
distinct(Cluster, .keep_all = TRUE)# %>%
#as.data.frame()
}
# aplicando a funcao na lista de dataframes
clust_TCR_agrupados <- lapply(clust_TCR, agrupar_por_cluster)
clust_BCR_agrupados <- lapply(clust_BCR, agrupar_por_cluster)
salvar_dataframe_tsv <- function(df) {
nome_arquivo <- paste("data/bcr/", names(df[1]), ".tsv", sep = "")
readr::write_delim(df, file = nome_arquivo, delim = "\t")
}
lapply(clust_BCR_agrupados, salvar_dataframe_tsv)
# exportar tabelas de TCR
library(readr)
for (i in names(clust_TCR_agrupados)) {
write_delim(as.data.frame(clust_TCR_agrupados[i]),
file = paste("data/tcr/", i, "_clones.tsv", sep = ""),
delim = "\t")}
write.table(clust_BCR_agrupados[1],
file = paste("data/bcr/", names(clust_BCR_agrupados[1])),
sep = "\t")
write.table(clust_BCR_agrupados$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`,
file = paste("data/bcr/", names(clust_BCR_agrupados[1])),
sep = "\t")
write.table(clust_BCR_agrupados$`cat(names(clust_BCR_agrupados[1]))`,
file = paste("data/bcr/", names(clust_BCR_agrupados[1])),
sep = "\t")
write.table(clust_BCR_agrupados$`cat(names(clust_BCR_agrupados[1]))`,
file = paste("data/bcr/", names(clust_BCR_agrupados[1])),
sep = "\t")
write.table(clust_BCR_agrupados$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`,
file = paste("data/bcr/", names(clust_BCR_agrupados[1])),
sep = "\t")
write.table(clust_BCR_agrupados$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`,
file = paste("data/bcr/", names(clust_BCR_agrupados[1])),
sep = "\t")
salvar_dataframe_tsv <- function(df) {
nome_arquivo <- paste("data/bcr/", names(df[1]), ".tsv", sep = "")
readr::write_delim(df, file = nome_arquivo, delim = "\t")
}
lapply(clust_BCR_agrupados, salvar_dataframe_tsv)
lapply(clust_TCR_agrupados, salvar_dataframe_tsv)
# exportar tabelas de TCR
for (i in names(clust_TCR_agrupados)) {
write.table(as.data.frame(clust_TCR_agrupados[i]),
file = paste("data/tcr/", i, "_clones.tsv", sep = ""),
sep = "\t",
row.names = FALSE)}
# exportar tabelas de BCR
for (i in names(clust_BCR_agrupados)) {
write.table(as.data.frame(clust_BCR_agrupados[i]),
file = paste("data/bcr/", i, "_clones.tsv", sep = ""),
sep = "\t",
row.names = FALSE)}
nomes_novos <-c("Clones")
clust_BCR_agrupados$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`
clust_BCR_agrupados$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`
names(clust_BCR_agrupados$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`)
alterar_nomes_acolunas <- function(caminho_arquivo){
df <- read.table(caminho_arquivo, header = TRUE, sep = "\t")
nomes_novos <-c("Clones","Proportion","CDR3.nt","CDR3.aa","V.name","D.name","J.name",
"V.end","D.start","D.end","J.start","VJ.ins","DJ.ins","Cluster")
colnames(df) <- nomes_novos
write.table(df, file = caminho_arquivo, sep = "\t", row.names = FALSE)
}
arquivos <- list.files(path = "data/bcr/", full.names = TRUE)
arquivos
arquivos <- list.files(path = "data/bcr", full.names = TRUE)
arquivos
lapply(arquivos, alterar_nomes_acolunas)
alterar_nomes_acolunas <- function(caminho_arquivo){
df <- read.table(caminho_arquivo, header = TRUE, sep = "\t")
nomes_novos <-c("Clones","Proportion","CDR3.nt","CDR3.aa","V.name","D.name","J.name",
"V.end","D.start","D.end","J.start","VJ.ins","DJ.ins","Cluster")
colnames(df) <- nomes_novos
write.table(df, file = caminho_arquivo, sep = "\t", row.names = FALSE)
}
arquivos <- list.files(path = "data/bcr", full.names = TRUE)
lapply(arquivos, alterar_nomes_acolunas)
arquivos
getwd()
setwd("~/Documents/onedrive/Documentos/GitHub/repertorio-TCR-BCR-tcga-ACC/04_anlytics/00_clones")
alterar_nomes_acolunas <- function(caminho_arquivo){
df <- read.table(caminho_arquivo, header = TRUE, sep = "\t")
nomes_novos <-c("Clones","Proportion","CDR3.nt","CDR3.aa","V.name","D.name","J.name",
"V.end","D.start","D.end","J.start","VJ.ins","DJ.ins","Cluster")
colnames(df) <- nomes_novos
write.table(df, file = caminho_arquivo, sep = "\t", row.names = FALSE)
}
arquivos <- list.files(path = "data/bcr", full.names = TRUE)
lapply(arquivos, alterar_nomes_acolunas)
alterar_nomes_acolunas <- function(caminho_arquivo){
df <- read.table(caminho_arquivo, header = TRUE, sep = "\t")
nomes_novos <-c("Clones","Proportion","CDR3.nt","CDR3.aa","V.name","D.name","J.name",
"V.end","D.start","D.end","J.start","VJ.ins","DJ.ins","Cluster")
colnames(df) <- nomes_novos
write.table(df, file = caminho_arquivo, sep = "\t", row.names = FALSE)
}
arquivos <- list.files(path = "data/bcr", full.names = TRUE)
lapply(arquivos, alterar_nomes_acolunas)
file.copy(from = "data/bcr", to = getwd(), overwrite = TRUE)
file.copy(from = "data/bcr", to = getwd(), overwrite = TRUE)
alterar_nomes_acolunas <- function(caminho_arquivo){
df <- read.table(caminho_arquivo, header = TRUE, sep = "\t")
nomes_novos <-c("Clones","Proportion","CDR3.nt","CDR3.aa","V.name","D.name","J.name",
"V.end","D.start","D.end","J.start","VJ.ins","DJ.ins","Cluster")
colnames(df) <- nomes_novos
write.table(df, file = caminho_arquivo, sep = "\t", row.names = FALSE)
}
arquivos <- list.files(path = "data/bcr", full.names = TRUE)
lapply(arquivos, alterar_nomes_acolunas)
setwd("~/Documents/onedrive/Documentos/GitHub/repertorio-TCR-BCR-tcga-ACC/04_anlytics/00_clones")
# exportar tabelas de TCR
for (i in names(clust_TCR_agrupados)) {
write.table(as.data.frame(clust_TCR_agrupados[i]),
file = paste("data/tcr/", i, "_clones.tsv", sep = ""),
sep = "\t",
row.names = FALSE)}
# exportar tabelas de BCR
for (i in names(clust_BCR_agrupados)) {
write.table(as.data.frame(clust_BCR_agrupados[i]),
file = paste("data/bcr/", i, "_clones.tsv", sep = ""),
sep = "\t",
row.names = FALSE)}
#| output: false
# -- pacotes necessarios
library(immunarch)
library(dplyr)
#| output: false
# -- preparando o ambiente de trabalho
dir_data <-
"../../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/"
immdata <- repLoad(paste(dir_data, "outputTrust4_report", sep = ""))
load(paste(dir_data, "metadata.RData", sep = ""))
immdata$meta <- metadata[metadata$sample_id %in%
gsub("_report", "", immdata$meta$Sample),]
remove_NA <- function(df){
df %>%
filter(!is.na(J.name))
}
immdata$data <- lapply(immdata$data, remove_NA)
immdata$data$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`
#| output: false
# -- separacao dos repertorios de TCR e BCR
immdata$meta$Sample <- paste(immdata$meta$sample_id,"_report",sep = "")
immdata$meta$Sample %in% names(immdata$data)
immdata_bcr <- repFilter(immdata,
.method = "by.clonotype",
.query = list(V.name = include("IG")),
.match = "substring")
immdata_tcr <- repFilter(immdata,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
#| output: false
# -- calculo da distancia entre as sequencias
dist_BCR <- seqDist(immdata_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_BCR <- seqCluster(immdata_bcr$data, dist_BCR, .perc_similarity = 0.9)
dist_TCR <- seqDist(immdata_tcr$data[-12],
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_TCR <- seqCluster(immdata_tcr$data[-12], dist_TCR, .perc_similarity = 0.95)
temp <- immdata_tcr$data[12]
temp$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`$J.name
nchar(temp$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`$CDR3.nt)
temp$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`$Cluster <-
c("TRAV9-2/TRAJ17_length_39","TRAV9-2/TRAJ17_length_39")
names(temp)
clust_TCR$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report` <-
as.data.frame(temp$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`)
clust_TCR$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`
clust_TCR$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`
# funcao para agrupar os dataframes
agrupar_por_cluster <- function(df){
df %>%
group_by(Cluster) %>%
mutate(Clones = sum(Clones),
Proportion = sum(Proportion)) %>%
ungroup() %>%
distinct(Cluster, .keep_all = TRUE)# %>%
#as.data.frame()
}
# aplicando a funcao na lista de dataframes
clust_TCR_agrupados <- lapply(clust_TCR, agrupar_por_cluster)
clust_BCR_agrupados <- lapply(clust_BCR, agrupar_por_cluster)
# exportar tabelas de TCR
for (i in names(clust_TCR_agrupados)) {
write.table(as.data.frame(clust_TCR_agrupados[i]),
file = paste("data/tcr/", i, "_clones.tsv", sep = ""),
sep = "\t",
row.names = FALSE)}
# exportar tabelas de BCR
for (i in names(clust_BCR_agrupados)) {
write.table(as.data.frame(clust_BCR_agrupados[i]),
file = paste("data/bcr/", i, "_clones.tsv", sep = ""),
sep = "\t",
row.names = FALSE)}
setwd("~/Documents/onedrive/Documentos/GitHub/repertorio-TCR-BCR-tcga-ACC/03_exploratory_analysis")
#| output: false
# -- arquivos necessarios
load("tcgaACC_pre_processed.RData")
#| output: false
outputTrust4_report <-
"../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/outputTrust4_report/"
files <- list.files(outputTrust4_report)
writeLines(files, "samplesNames.txt") # gerando samplesNames.txt
file.exists("samplesNames.txt")
outputTrust4_report_clones_bcr <-
"../04_anlytics/00_clones/data/bcr/"
files_clones_bcr <- list.files(outputTrust4_report_clones_bcr)
writeLines(files_clones_bcr, "samplesNames_bcr.txt")
outputTrust4_report_clones_tcr <-
"../04_anlytics/00_clones/data/tcr/"
files_clones_tcr <- list.files(outputTrust4_report_clones_tcr)
writeLines(files_clones_tcr, "samplesNames_tcr.txt")
setwd("~/Documents/onedrive/Documentos/GitHub/repertorio-TCR-BCR-tcga-ACC/04_anlytics/00_clones")
#| output: false
# -- preparando o ambiente de trabalho
dir_data <-
"../../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/"
immdata <- repLoad(paste(dir_data, "outputTrust4_report", sep = ""))
load(paste(dir_data, "metadata.RData", sep = ""))
immdata$meta <- metadata[metadata$sample_id %in%
gsub("_report", "", immdata$meta$Sample),]
remove_NA <- function(df){
df %>%
filter(!is.na(J.name))
}
immdata$data <- lapply(immdata$data, remove_NA)
immdata$data$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`
#| output: false
# -- separacao dos repertorios de TCR e BCR
immdata$meta$Sample <- paste(immdata$meta$sample_id,"_report",sep = "")
immdata$meta$Sample %in% names(immdata$data)
immdata_bcr <- repFilter(immdata,
.method = "by.clonotype",
.query = list(V.name = include("IG")),
.match = "substring")
immdata_tcr <- repFilter(immdata,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
#| output: false
# -- calculo da distancia entre as sequencias
dist_BCR <- seqDist(immdata_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_BCR <- seqCluster(immdata_bcr$data, dist_BCR, .perc_similarity = 0.9)
dist_TCR <- seqDist(immdata_tcr$data[-12],
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_TCR <- seqCluster(immdata_tcr$data[-12], dist_TCR, .perc_similarity = 0.95)
temp <- immdata_tcr$data[12]
temp$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`$J.name
nchar(temp$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`$CDR3.nt)
temp$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`$Cluster <-
c("TRAV9-2/TRAJ17_length_39","TRAV9-2/TRAJ17_length_39")
names(temp)
clust_TCR$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report` <-
as.data.frame(temp$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`)
clust_TCR$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`
clust_TCR$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`
#| output: false
# funcao para agrupar os dataframes
agrupar_por_cluster <- function(df){
df %>%
group_by(Cluster) %>%
mutate(Clones = sum(Clones),
Proportion = sum(Proportion)) %>%
ungroup() %>%
distinct(Cluster, .keep_all = TRUE)# %>%
#as.data.frame()
}
# aplicando a funcao na lista de dataframes
clust_TCR_agrupados <- lapply(clust_TCR, agrupar_por_cluster)
clust_BCR_agrupados <- lapply(clust_BCR, agrupar_por_cluster)
#| output: false
# exportar tabelas de TCR
for (i in names(clust_TCR_agrupados)) {
write.table(as.data.frame(clust_TCR_agrupados[i]),
file = paste("data/tcr/", i, ".tsv", sep = ""),
sep = "\t",
row.names = FALSE)}
# exportar tabelas de BCR
for (i in names(clust_BCR_agrupados)) {
write.table(as.data.frame(clust_BCR_agrupados[i]),
file = paste("data/bcr/", i, ".tsv", sep = ""),
sep = "\t",
row.names = FALSE)}
#| output: false
# exportar tabelas de TCR
for (i in names(clust_TCR_agrupados)) {
write.table(as.data.frame(clust_TCR_agrupados[i]),
file = paste("data/tcr/", i, ".tsv", sep = ""),
sep = "\t",
row.names = FALSE)}
# exportar tabelas de BCR
for (i in names(clust_BCR_agrupados)) {
write.table(as.data.frame(clust_BCR_agrupados[i]),
file = paste("data/bcr/", i, ".tsv", sep = ""),
sep = "\t",
row.names = FALSE)}
setwd("~/Documents/onedrive/Documentos/GitHub/repertorio-TCR-BCR-tcga-ACC/03_exploratory_analysis")
#| output: false
# -- arquivos necessarios
load("tcgaACC_pre_processed.RData")
#| output: false
outputTrust4_report <-
"../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/outputTrust4_report/"
files <- list.files(outputTrust4_report)
writeLines(files, "samplesNames.txt") # gerando samplesNames.txt
file.exists("samplesNames.txt")
outputTrust4_report_clones_bcr <-
"../04_anlytics/00_clones/data/bcr/"
files_clones_bcr <- list.files(outputTrust4_report_clones_bcr)
writeLines(files_clones_bcr, "samplesNames_bcr.txt")
outputTrust4_report_clones_tcr <-
"../04_anlytics/00_clones/data/tcr/"
files_clones_tcr <- list.files(outputTrust4_report_clones_tcr)
writeLines(files_clones_tcr, "samplesNames_tcr.txt")
