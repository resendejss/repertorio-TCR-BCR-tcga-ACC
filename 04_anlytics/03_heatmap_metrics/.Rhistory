# -- pacotes necessarios
library(RColorBrewer)
library(circlize)
library(ComplexHeatmap)
library(dplyr)
library(tidyr)
library(tibble)
load("../../03_exploratory_analysis/tcrbcr_clones.RData")
load("../../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/coldataACC.RData")
View(tcrbcr_clones)
data <- tcrbcr_clones
data$chain <- ifelse(
substr(data$V, 1,3) == "IGH", "IGH",
ifelse(substr(data$V, 1,3) == "IGK", "IGK",
ifelse(substr(data$V, 1,3) == "IGL", "IGL",
ifelse(substr(data$V,1,3) == "TRA", "TRA",
ifelse(substr(data$V,1,3) == "TRB", "TRB",
ifelse(substr(data$V, 1,3) == "TRG", "TRG",
ifelse(substr(data$V, 1,3) == "TRD", "TRD",
NA)))))))
View(data)
data$TCR <- sum(data$count[data$chain %in% c("TRA","TRB","TRG","TRD")])
data <- tcrbcr_clones
data$chain <- ifelse(
substr(data$V, 1,3) == "IGH", "IGH",
ifelse(substr(data$V, 1,3) == "IGK", "IGK",
ifelse(substr(data$V, 1,3) == "IGL", "IGL",
ifelse(substr(data$V,1,3) == "TRA", "TRA",
ifelse(substr(data$V,1,3) == "TRB", "TRB",
ifelse(substr(data$V, 1,3) == "TRG", "TRG",
ifelse(substr(data$V, 1,3) == "TRD", "TRD",
NA)))))))
mat_data <- data %>%
group_by(sample_id, chain) %>%
summarize(count = sum(count)) %>%
pivot_wider(names_from = chain,
values_from = count,
values_fill = NA)
View(mat_data)
#mat_data$IGK[]
mat_data$TCR <- rowSums(mat_data[,c(4,5,7,8)])
is.na(mat_data$IGK)
mat_data$IGK[is.na(mat_data$IGK)] <-  0
View(mat_data)
names(mat_data[2:9])
for (col in names(mat_data[2:9])) {
mat_data[,col] <- is.na(mat_data[,col]) <- 0
}
for (col in names(mat_data[2:9])) {
mat_data$col <- is.na(mat_data$col) <- 0
}
for (col in names(mat_data[2:9])) {
mat_data$col[is.na(mat_data$col)] <- 0
}
mat_data <- data %>%
group_by(sample_id, chain) %>%
summarize(count = sum(count)) %>%
pivot_wider(names_from = chain,
values_from = count,
values_fill = NA)
mat_data$IGK[is.na(mat_data$IGK)] <-  0
mat_data$IGL[is.na(mat_data$IGL)] <-  0
mat_data$TRB[is.na(mat_data$TRB)] <-  0
mat_data$TRG[is.na(mat_data$TRG)] <-  0
mat_data$IGH[is.na(mat_data$IGH)] <-  0
mat_data$TRA[is.na(mat_data$TRA)] <-  0
mat_data$TRD[is.na(mat_data$TRD)] <-  0
#mat_data$IGK[]
mat_data$TCR <- rowSums(mat_data[,c(4,5,7,8)])
mat_data$BCR <- rowSums(mat_data[,c(2,3,6)])
mat_data <- column_to_rownames(mat_data, "sample_id")
mat_data$TCR + mat_data$BCR
mat_sum_tcrbcr <- mat_data$TCR + mat_data$BCR
View(mat_data)
mat_data$mat_sum_tcrbcr <- mat_data$TCR + mat_data$BCR
nrow(mat_data[,mat_data$TCR == 0])
nrow(mat_data[mat_data$TCR == 0,])
nrow(mat_data[mat_data$BCR == 0,])
nrow(mat_data[mat_data$BCR != 0 & mat_data$TCR !=0,])
sum(mat_data$mat_sum_tcrbcr)
sum(mat_data$TCR)
sum(mat_data$BCR)
coldataACC_clones <- data.frame(
sample_id = coldataACC$sample_id,
barcode = coldataACC$barcode,
gender = coldataACC$gender,
steroid = coldataACC$steroid,
tumor_stage = coldataACC$tumor_stage,
vital_status = coldataACC$vital_status,
cortisol.excess = coldataACC$cortisol.excess,
immune.subtype = coldataACC_clones$immune.subtype,
other.hormones = coldataACC$other.hormones,
reads = coldataACC$reads)
# -- pacotes necessarios
library(RColorBrewer)
library(circlize)
library(ComplexHeatmap)
library(dplyr)
library(tidyr)
library(tibble)
load("../../03_exploratory_analysis/tcrbcr_clones.RData")
load("../../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/coldataACC.RData")
coldata <- coldataACC %>%
arrange(desc(steroid), desc(sum_TCR_BCR))
nrow(coldata)
# -- pacotes necessarios
library(RColorBrewer)
library(circlize)
library(ComplexHeatmap)
library(dplyr)
library(tidyr)
library(tibble)
load("../../03_exploratory_analysis/tcrbcr_clones.RData")
load("../../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/coldataACC.RData")
data <- tcrbcr_clones
data$chain <- ifelse(
substr(data$V, 1,3) == "IGH", "IGH",
ifelse(substr(data$V, 1,3) == "IGK", "IGK",
ifelse(substr(data$V, 1,3) == "IGL", "IGL",
ifelse(substr(data$V,1,3) == "TRA", "TRA",
ifelse(substr(data$V,1,3) == "TRB", "TRB",
ifelse(substr(data$V, 1,3) == "TRG", "TRG",
ifelse(substr(data$V, 1,3) == "TRD", "TRD",
NA)))))))
#data$TCR <- sum(data$count[data$chain %in% c("TRA","TRB","TRG","TRD")])
mat_data <- data %>%
group_by(sample_id, chain) %>%
summarize(count = sum(count)) %>%
pivot_wider(names_from = chain,
values_from = count,
values_fill = NA)
mat_data$IGK[is.na(mat_data$IGK)] <-  0
mat_data$IGL[is.na(mat_data$IGL)] <-  0
mat_data$TRB[is.na(mat_data$TRB)] <-  0
mat_data$TRG[is.na(mat_data$TRG)] <-  0
mat_data$IGH[is.na(mat_data$IGH)] <-  0
mat_data$TRA[is.na(mat_data$TRA)] <-  0
mat_data$TRD[is.na(mat_data$TRD)] <-  0
mat_data$TCR <- rowSums(mat_data[,c(4,5,7,8)])
mat_data$BCR <- rowSums(mat_data[,c(2,3,6)])
mat_data$mat_sum_tcrbcr <- mat_data$TCR + mat_data$BCR
mat_data <- column_to_rownames(mat_data, "sample_id")
#mat_data <- as.matrix(t(mat_data))
mat_data
nrow(mat_data[mat_data$TCR == 0,])
nrow(mat_data[mat_data$BCR == 0,])
nrow(mat_data[mat_data$BCR != 0 & mat_data$TCR !=0,])
sum(mat_data$mat_sum_tcrbcr)
sum(mat_data$TCR)
sum(mat_data$BCR)
coldataACC_clones <- data.frame(
sample_id = coldataACC$sample_id,
barcode = coldataACC$barcode,
gender = coldataACC$gender,
steroid = coldataACC$steroid,
tumor_stage = coldataACC$tumor_stage,
vital_status = coldataACC$vital_status,
cortisol.excess = coldataACC$cortisol.excess,
immune.subtype = coldataACC$immune.subtype,
other.hormones = coldataACC$other.hormones,
reads = coldataACC$reads)
mat_data
idx <- match(rownames(mat_data), coldataACC_clones$sample_id)
idx
mat_data$steroid <- coldataACC_clones$steroid[idx]
mat_data$steroid
mat_data
mat_data <- mat_data %>%
arrange(desc(steroid), desc(mat_sum_tcrbcr))
mat_data
samples.match <- coldataACC_clones$sample_id[
coldataACC_clones$sample_id %in% rownames(mat_data)]
samples.match
identical(samples.match,coldataACC_clones$sample_id)
coldataACC_clones$sample_id
samples.match
identical(samples.match, rownames(mat_data))
rownames(mat_data)
idx <- match(coldataACC_clones$sample_id, rownames(mat_data))
idx
table(is.na(idx))
samples.no_match <- coldataACC_clones$sample_id[is.na(idx)]
samples.no_match
## -- data
data <- tableGeneral %>%
group_by(sample_id, chain) %>%
#summarize(Abundance = sum(Abundance)) %>%
summarize(Abundance) %>%
pivot_wider(names_from = chain,
values_from = Abundance,
values_fill = NA)
names(mat_data)
mat_data_add <- data.frame(IGK = rep(0,11),
IGL = rep(0,11),
TRB = rep(0,11),
TRG = rep(0,11),
IGH = rep(0,11),
TRA = rep(0,11),
TRD = rep(0,11),
TCR = rep(0,11),
BCR = rep(0,11),
mat_sum_tcrbcr = rep(0,11),
steroid = rep(NA,11))
mat_data_add
rownames(mat_data_add) <- samples.no_match
samples.no_match
c(samples.match, samples.no_match)
coldataACC_clones$sample_id
coldataACC$sample_id
c(samples.match, samples.no_match)
samples.no_match
mat_data_add <- data.frame(IGK = rep(0,8),
IGL = rep(0,8),
TRB = rep(0,8),
TRG = rep(0,8),
IGH = rep(0,8),
TRA = rep(0,8),
TRD = rep(0,8),
TCR = rep(0,8),
BCR = rep(0,8),
mat_sum_tcrbcr = rep(0,8),
steroid = rep(NA,8))
rownames(mat_data_add) <- samples.no_match
rownames(mat_data_add) <- na.omit(samples.no_match)
mat_data_add
idx <- match(rownames(mat_data_add), coldataACC_clones$sample_id)
idx
mat_data_add$steroid <- coldataACC_clones$steroid[idx]
mat_data_add
rbind(mat_data,mat_data_add)
# -- pacotes necessarios
library(RColorBrewer)
library(circlize)
library(ComplexHeatmap)
library(dplyr)
library(tidyr)
library(tibble)
load("../../03_exploratory_analysis/tcrbcr_clones.RData")
load("../../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/coldataACC.RData")
data <- tcrbcr_clones
data$chain <- ifelse(
substr(data$V, 1,3) == "IGH", "IGH",
ifelse(substr(data$V, 1,3) == "IGK", "IGK",
ifelse(substr(data$V, 1,3) == "IGL", "IGL",
ifelse(substr(data$V,1,3) == "TRA", "TRA",
ifelse(substr(data$V,1,3) == "TRB", "TRB",
ifelse(substr(data$V, 1,3) == "TRG", "TRG",
ifelse(substr(data$V, 1,3) == "TRD", "TRD",
NA)))))))
#data$TCR <- sum(data$count[data$chain %in% c("TRA","TRB","TRG","TRD")])
mat_data <- data %>%
group_by(sample_id, chain) %>%
summarize(count = sum(count)) %>%
pivot_wider(names_from = chain,
values_from = count,
values_fill = NA)
mat_data$IGK[is.na(mat_data$IGK)] <-  0
mat_data$IGL[is.na(mat_data$IGL)] <-  0
mat_data$TRB[is.na(mat_data$TRB)] <-  0
mat_data$TRG[is.na(mat_data$TRG)] <-  0
mat_data$IGH[is.na(mat_data$IGH)] <-  0
mat_data$TRA[is.na(mat_data$TRA)] <-  0
mat_data$TRD[is.na(mat_data$TRD)] <-  0
mat_data$TCR <- rowSums(mat_data[,c(4,5,7,8)])
mat_data$BCR <- rowSums(mat_data[,c(2,3,6)])
mat_data$mat_sum_tcrbcr <- mat_data$TCR + mat_data$BCR
mat_data <- column_to_rownames(mat_data, "sample_id")
#mat_data <- as.matrix(t(mat_data))
nrow(mat_data[mat_data$TCR == 0,])
nrow(mat_data[mat_data$BCR == 0,])
nrow(mat_data[mat_data$BCR != 0 & mat_data$TCR !=0,])
sum(mat_data$mat_sum_tcrbcr)
sum(mat_data$TCR)
sum(mat_data$BCR)
coldataACC_clones <- data.frame(
sample_id = coldataACC$sample_id,
barcode = coldataACC$barcode,
gender = coldataACC$gender,
steroid = coldataACC$steroid,
tumor_stage = coldataACC$tumor_stage,
vital_status = coldataACC$vital_status,
cortisol.excess = coldataACC$cortisol.excess,
immune.subtype = coldataACC$immune.subtype,
other.hormones = coldataACC$other.hormones,
reads = coldataACC$reads)
2+2
samples.match <- coldataACC_clones$sample_id[
coldataACC_clones$sample_id %in% rownames(mat_data)]
samples.match
idx <- match(coldataACC_clones$sample_id, rownames(mat_data))
table(is.na(idx))
samples.no_match <- coldataACC_clones$sample_id[is.na(idx)] # 3 NAs pq nao foi baixado esses casos
samples.no_match
names(mat_data)
mat_data_add <- data.frame(IGK = rep(0,8),
IGL = rep(0,8),
TRB = rep(0,8),
TRG = rep(0,8),
IGH = rep(0,8),
TRA = rep(0,8),
TRD = rep(0,8),
TCR = rep(0,8),
BCR = rep(0,8),
mat_sum_tcrbcr = rep(0,8),
steroid = rep(NA,8))
rownames(mat_data_add) <- na.omit(samples.no_match)
mat_data_add
mat_data_add <- data.frame(IGK = rep(0,8),
IGL = rep(0,8),
TRB = rep(0,8),
TRG = rep(0,8),
IGH = rep(0,8),
TRA = rep(0,8),
TRD = rep(0,8),
TCR = rep(0,8),
BCR = rep(0,8),
mat_sum_tcrbcr = rep(0,8))
rownames(mat_data_add) <- na.omit(samples.no_match)
mat_data_add
mat_data_all <- rbind(mat_data, mat_data_add)
mat_data_all
dim(mat_data_all)
mat_data_all
# adicionando a coluna referente aos esteroides
idx <- match(rownames(mat_data_all), coldataACC_clones$sample_id)
idx
mat_data_all$steroid <- coldataACC_clones$steroid[idx]
mat_data_all
mat_data_add <- mat_data_all %>%
arrange(desc(steroid), desc(mat_sum_tcrbcr))
mat_data_all <- mat_data_all %>%
arrange(desc(steroid), desc(mat_sum_tcrbcr))
mat_data_all
# matriz final
mat_data_all <- as.matrix(t(mat_data_all))
mat_data_all
# completando a matriz geral
mat_data_all <- rbind(mat_data, mat_data_add)
# adicionando a coluna referente aos esteroides
idx <- match(rownames(mat_data_all), coldataACC_clones$sample_id)
mat_data_all$steroid <- coldataACC_clones$steroid[idx]
mat_data_all <- mat_data_all %>%
arrange(desc(steroid), desc(mat_sum_tcrbcr))
# matriz final
mat_data_all <- as.matrix(t(mat_data_all))
idx <- match(rownames(mat_data_add), coldataACC_clones$sample_id)
# amostras que tiveram tcr e bcr extraidas por trust4
samples.match <- coldataACC_clones$sample_id[
coldataACC_clones$sample_id %in% rownames(mat_data)]
# amostras que o trust4 nao extraiu tcr e bcr
idx <- match(coldataACC_clones$sample_id, rownames(mat_data))
table(is.na(idx))
samples.no_match <- coldataACC_clones$sample_id[is.na(idx)] # 3 NAs pq nao foi baixado esses casos
# matriz contendo as amostras que nao tiveram tcr e bcr
names(mat_data)
mat_data_add <- data.frame(IGK = rep(0,8),
IGL = rep(0,8),
TRB = rep(0,8),
TRG = rep(0,8),
IGH = rep(0,8),
TRA = rep(0,8),
TRD = rep(0,8),
TCR = rep(0,8),
BCR = rep(0,8),
mat_sum_tcrbcr = rep(0,8))
rownames(mat_data_add) <- na.omit(samples.no_match)
# completando a matriz geral
mat_data_all <- rbind(mat_data, mat_data_add)
# adicionando a coluna referente aos esteroides
idx <- match(rownames(mat_data_all), coldataACC_clones$sample_id)
mat_data_all$steroid <- coldataACC_clones$steroid[idx]
mat_data_all <- mat_data_all %>%
arrange(desc(steroid), desc(mat_sum_tcrbcr))
mat_data_all
