setwd("/media/jean/RODRIGO DISNER_II/RNASeq_IPPPP/main/PreProcSEQ-main/")
getwd()
dir.principal <- getwd()
dir.amostras_69 <- "/media/jean/RODRIGO DISNER_II/RNASeq_IPPPP/ftp.ipec.org.br/Seq_69/FastQ/Untitled_from_240112_A01161_0069_AHLTMGDRX3-407367966/FASTQ_Generation_2024-01-13_15_48_42Z-714099388/"
dir.amostras_70 <- "/media/jean/RODRIGO DISNER_II/RNASeq_IPPPP/ftp.ipec.org.br/Seq_70/FastQ/Untitled_from_240116_A01161_0070_AHMLK5DRX3-407630226/FASTQ_Generation_2024-01-17_09_03_53Z-714533830/"
list.files(dir.amostras_69)
list.files(dir.amostras_70)
length(list.files(dir.amostras_69)) + length(list.files(dir.amostras_70)) # 90
samplesNames.seq_69 <- NULL
for (i in 1:length(list.files(dir.amostras_69))) {
samplesNames.seq_69 <- c(samplesNames.seq_69,
list.files(paste(dir.amostras_69,
list.files(dir.amostras_69)[i],
sep = "/")))
}
samplesNames.seq_70 <- NULL
for (i in 1:length(list.files(dir.amostras_70))) {
samplesNames.seq_70 <- c(samplesNames.seq_70,
list.files(paste(dir.amostras_70,
list.files(dir.amostras_70)[i],
sep = "/")))
}
samplesNames.seq_69.unique <- unique(gsub("_R._001.fastq.gz", "",
samplesNames.seq_69))
samplesNames.seq_70.unique <- unique(gsub("_R._001.fastq.gz", "",
samplesNames.seq_70))
getwd()
samplesNames.seq_70.unique
samplesPath.seq_69 <- NULL
for (i in 1:length(samplesNames.seq_69.unique)) {
samplesPath.seq_69 <- c(samplesPath.seq_69, paste(list.files(dir.amostras_69)[i],"/",samplesNames.seq_69.unique[i], sep = ""))
}
samplesPath.seq_69
samplesPath.seq_70 <- NULL
for (i in 1:length(samplesNames.seq_70.unique)) {
samplesPath.seq_70 <- c(samplesPath.seq_70, paste(list.files(dir.amostras_70)[i],"/",samplesNames.seq_70.unique[i], sep = ""))
}
write.table(samplesPath.seq_70, "samplesPath_seq70.txt",
quote = F, row.names = F, col.names = F)
if (!requireNamespace("IOBR", quietly = TRUE))  devtools::install_github("IOBR/IOBR")
install.packages("devtools")
install.packages("systemfonts")
install.packages("systemfonts")
install.packages("textshaping")
install.packages("textshaping")
install.packages("ragg")
install.packages("pkgdown")
install.packages("devtools")
if (!requireNamespace("IOBR", quietly = TRUE))  devtools::install_github("IOBR/IOBR")
BiocManager::install("clusterProfiler")
install.packages("igraph")
install.packages("igraph")
install.packages("igraph")
install.packages("tidygraph")
install.packages("graphlayouts")
install.packages("ggraph")
BiocManager::install("enrichplot")
BiocManager::install("clusterProfiler")
install.packages("nloptr")
install.packages("nloptr")
install.packages("lme4")
install.packages("pbkrtest")
install.packages("car")
install.packages("rstatix")
install.packages("survminer")
install.packages("ggpubr")
devtools::install_github("IOBR/IOBR")
load("7-normalizationCounts/tmm/gse_tmm.RData")
load(("7-normalizationCounts/tpm/gse_tpm.RData"))
library(immunarch)
immdata <- repLoad("../../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/outputTrust4_report/")
library(immunarch)
dir_data <- "../../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/"
immdata <- repLoad(paste(dir_data, "outputTrust4_report", sep = ""))
setwd("Documents/onedrive/Documentos/GitHub/repertorio-TCR-BCR-tcga-ACC/04_anlytics/00_clones")
dir_data <- "../../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/"
immdata <- repLoad(paste(dir_data, "outputTrust4_report", sep = ""))
load(paste(dir_data, "metadata.RData", sep = ""))
immdata$meta <- metadata[metadata$sample_id %in% gsub("_report", "", immdata$meta$Sample),]
# separar os grupos high e low
immdata$meta$steroid
immdata_high <- immdata
immdata_high$meta <- immdata_high$meta[immdata_high$meta$steroid == "HSP",]
immdata_high$data <- immdata_high$data[gsub("_report","",names(immdata_high$data)) %in%
immdata_high$meta$sample_id]
immdata_low <- immdata
immdata_low$meta <- immdata_low$meta[immdata_low$meta$steroid == "LSP",]
immdata_low$meta <- immdata_low$meta[!is.na(immdata_low$meta$steroid),]
immdata_low$data <- immdata_low$data[gsub("_report","",names(immdata_low$data)) %in%
immdata_low$meta$sample_id]
immdata_low$meta$Sample <- paste(immdata_low$meta$sample_id,"_report")
immdata_low_tcr <- repFilter(immdata_low,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
immdata_low_tcr$data$`130723_UNC9-SN296_0386_BC2E4WACXX_ATCACG_L003_report`$V.name
immdata_low$data$`130723_UNC9-SN296_0386_BC2E4WACXX_ATCACG_L003_report`$V.name
immdata_high$meta$Sample <- paste(immdata_high$meta$sample_id,"_report")
immdata_high$meta$Sample
immdata_high <- immdata
immdata_high$meta <- immdata_high$meta[immdata_high$meta$steroid == "HSP",]
immdata_high$meta <- immdata_high$meta[!is.na(immdata_high$meta$steroid),]
immdata_high$data <- immdata_high$data[gsub("_report","",names(immdata_high$data)) %in%
immdata_high$meta$sample_id]
immdata_low <- immdata
immdata_low$meta <- immdata_low$meta[immdata_low$meta$steroid == "LSP",]
immdata_low$meta <- immdata_low$meta[!is.na(immdata_low$meta$steroid),]
immdata_low$data <- immdata_low$data[gsub("_report","",names(immdata_low$data)) %in%
immdata_low$meta$sample_id]
immdata_low$meta$Sample <- paste(immdata_low$meta$sample_id,"_report")
immdata_low_tcr <- repFilter(immdata_low,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
immdata_low_tcr$data$`130723_UNC9-SN296_0386_BC2E4WACXX_ATCACG_L003_report`$V.name
immdata_low$data$`130723_UNC9-SN296_0386_BC2E4WACXX_ATCACG_L003_report`$V.name
immdata_high$meta$Sample <- paste(immdata_high$meta$sample_id,"_report")
immdata_high$meta$Sample
immdata_high_tcr <- repFilter(immdata_high,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
View(immdata_high_tcr)
immdata_high_tcr$data$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`$V.name
immdata_high$data$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`$V.name
immdata_low_bcr <- repFilter(immdata_low,
.method = "by.clonotype",
.query = list(V.name = include("IG")),
.match = "substring")
immdata_low_bcr$data$`130723_UNC9-SN296_0386_BC2E4WACXX_ATCACG_L003_report`$V.name
immdata_low$data$`130723_UNC9-SN296_0386_BC2E4WACXX_ATCACG_L003_report`$V.name
immdata_high_bcr <- repFilter(immdata_high,
.method = "by.clonotype",
.query = list(V.name = include("IG")),
.match = "substring")
immdata_high_tcr$meta
names(immdata_high_tcr$data)
immdata_high$meta[paste(immdata_high$meta$sample_id,"_report") %in%
names(immdata_high_tcr$data),]
immdata_high$meta[paste(immdata_high$meta$sample_id,"_report",sep = "") %in%
names(immdata_high_tcr$data),]
immdata_high$meta$Sample
immdata_high_tcr$meta <- immdata_high$meta[immdata_high$meta$Sample %in%
names(immdata_high_tcr$data),]
immdata_high_tcr$meta
immdata_high$meta[immdata_high$meta$Sample %in%
names(immdata_high_tcr$data),]
immdata_high$meta[immdata_high$meta$Sample %in%
names(immdata_high_tcr$data),]
immdata_high <- immdata
immdata_high$meta <- immdata_high$meta[immdata_high$meta$steroid == "HSP",]
immdata_high$meta <- immdata_high$meta[!is.na(immdata_high$meta$steroid),]
immdata_high$data <- immdata_high$data[gsub("_report","",names(immdata_high$data)) %in%
immdata_high$meta$sample_id]
immdata_low <- immdata
immdata_low$meta <- immdata_low$meta[immdata_low$meta$steroid == "LSP",]
immdata_low$meta <- immdata_low$meta[!is.na(immdata_low$meta$steroid),]
immdata_low$data <- immdata_low$data[gsub("_report","",names(immdata_low$data)) %in%
immdata_low$meta$sample_id]
immdata_low$meta$Sample <- paste(immdata_low$meta$sample_id,"_report","")
immdata_high$meta$Sample <- paste(immdata_high$meta$sample_id,"_report","")
immdata_low_tcr <- repFilter(immdata_low,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
immdata_high_tcr <- repFilter(immdata_high,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
immdata_low_bcr <- repFilter(immdata_low,
.method = "by.clonotype",
.query = list(V.name = include("IG")),
.match = "substring")
immdata_high_bcr <- repFilter(immdata_high,
.method = "by.clonotype",
.query = list(V.name = include("IG")),
.match = "substring")
immdata_high_tcr$meta <- immdata_high$meta[immdata_high$meta$Sample %in%
names(immdata_high_tcr$data),]
immdata_high_tcr$meta
immdata_high$meta[immdata_high$meta$Sample %in%
names(immdata_high_tcr$data),]
immdata_high <- immdata
immdata_high$meta <- immdata_high$meta[immdata_high$meta$steroid == "HSP",]
immdata_high$meta <- immdata_high$meta[!is.na(immdata_high$meta$steroid),]
immdata_high$data <- immdata_high$data[gsub("_report","",names(immdata_high$data)) %in%
immdata_high$meta$sample_id]
immdata_low <- immdata
immdata_low$meta <- immdata_low$meta[immdata_low$meta$steroid == "LSP",]
immdata_low$meta <- immdata_low$meta[!is.na(immdata_low$meta$steroid),]
immdata_low$data <- immdata_low$data[gsub("_report","",names(immdata_low$data)) %in%
immdata_low$meta$sample_id]
immdata_low$meta$Sample <- paste(immdata_low$meta$sample_id,"_report",sep = "")
immdata_high$meta$Sample <- paste(immdata_high$meta$sample_id,"_report",sep = "")
immdata_low_tcr <- repFilter(immdata_low,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
immdata_high_tcr <- repFilter(immdata_high,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
immdata_low_bcr <- repFilter(immdata_low,
.method = "by.clonotype",
.query = list(V.name = include("IG")),
.match = "substring")
immdata_high_bcr <- repFilter(immdata_high,
.method = "by.clonotype",
.query = list(V.name = include("IG")),
.match = "substring")
immdata_high_tcr$meta <- immdata_high$meta[immdata_high$meta$Sample %in%
names(immdata_high_tcr$data),]
immdata_high_tcr$meta
View(immdata_high_tcr)
immdata_low_tcr$meta <- immdata_low$meta[immdata_low$meta$Sample %in%
names(immdata_low_tcr$data),]
immdata_low_tcr$meta
View(immdata_low_tcr)
immdata_low_bcr$meta <- immdata_low$meta[immdata_low$meta$Sample %in%
names(immdata_low_bcr$data),]
immdata_low_bcr$meta
View(immdata_low_bcr)
immdata_high_bcr$meta <- immdata_high$meta[immdata_high$meta$Sample %in%
names(immdata_high_bcr$data),]
immdata_high_bcr$meta
View(immdata_high_bcr)
# -- dist: group sequence by V.name, J.name and length CDR3
distBCR <- seqDist(immdata_high_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE)
View(distBCR)
distBCR$`130723_UNC9-SN296_0386_BC2E4WACXX_ACTTGA_L003_report`
# -- dist: group sequence by V.name, J.name and length CDR3
distBCR <- seqDist(immdata_high_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clustBCR <- seqCluster(immdata_high_bcr$data, distBCR, .perc_similarity = 0.9)
View(clustBCR)
# -- dist: group sequence by V.name, J.name and length CDR3
dist_high_BCR <- seqDist(immdata_high_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_high_BCR <- seqCluster(immdata_high_bcr$data, distBCR, .perc_similarity = 0.9)
dist_low_BCR <- seqDist(immdata_low_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
# -- dist: group sequence by V.name, J.name and length CDR3
dist_high_BCR <- seqDist(immdata_high_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_high_BCR <- seqCluster(immdata_high_bcr$data, dist_high_BCR, .perc_similarity = 0.9)
dist_low_BCR <- seqDist(immdata_low_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_low_BCR <- seqCluster(immdata_low_bcr$data, dist_low_BCR, .perc_similarity = 0.9)
View(clust_low_BCR)
dist_low_TCR <- seqDist(immdata_low_tcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_low_TCR <- seqCluster(immdata_low_tcr$data, dist_low_TCR, .perc_similarity = 0.95)
View(clust_low_TCR)
dist_low_BCR <- seqDist(immdata_low_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_low_BCR <- seqCluster(immdata_low_bcr$data, dist_low_BCR, .perc_similarity = 0.95)
# -- dist: group sequence by V.name, J.name and length CDR3
dist_high_BCR <- seqDist(immdata_high_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_high_BCR <- seqCluster(immdata_high_bcr$data, dist_high_BCR, .perc_similarity = 0.9)
dist_low_BCR <- seqDist(immdata_low_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_low_BCR <- seqCluster(immdata_low_bcr$data, dist_low_BCR, .perc_similarity = 0.9)
dist_low_TCR <- seqDist(immdata_low_tcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_low_TCR <- seqCluster(immdata_low_tcr$data, dist_low_TCR, .perc_similarity = 0.95)
dist_high_TCR <- seqDist(immdata_high_tcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_high_TCR <- seqCluster(immdata_high_tcr$data, dist_high_TCR, .perc_similarity = 0.95)
dist_high_TCR
setwd("Documents/onedrive/Documentos/GitHub/repertorio-TCR-BCR-tcga-ACC/04_anlytics/00_clones")
dir_data <- "../../../../Projetos/Bigdata/BigData/BigData/repertorio_tcrbcr_acc/data/"
immdata <- repLoad(paste(dir_data, "outputTrust4_report", sep = ""))
load(paste(dir_data, "metadata.RData", sep = ""))
immdata$meta <- metadata[metadata$sample_id %in% gsub("_report", "", immdata$meta$Sample),]
# separar os grupos high e low
immdata$meta$steroid
immdata_high <- immdata
immdata_high$meta <- immdata_high$meta[immdata_high$meta$steroid == "HSP",]
immdata_high$meta <- immdata_high$meta[!is.na(immdata_high$meta$steroid),]
immdata_high$data <- immdata_high$data[gsub("_report","",names(immdata_high$data)) %in%
immdata_high$meta$sample_id]
immdata_low <- immdata
immdata_low$meta <- immdata_low$meta[immdata_low$meta$steroid == "LSP",]
immdata_low$meta <- immdata_low$meta[!is.na(immdata_low$meta$steroid),]
immdata_low$data <- immdata_low$data[gsub("_report","",names(immdata_low$data)) %in%
immdata_low$meta$sample_id]
immdata_low$meta$Sample <- paste(immdata_low$meta$sample_id,"_report",sep = "")
immdata_high$meta$Sample <- paste(immdata_high$meta$sample_id,"_report",sep = "")
immdata_low_tcr <- repFilter(immdata_low,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
immdata_high_tcr <- repFilter(immdata_high,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
immdata_low_bcr <- repFilter(immdata_low,
.method = "by.clonotype",
.query = list(V.name = include("IG")),
.match = "substring")
immdata_high_bcr <- repFilter(immdata_high,
.method = "by.clonotype",
.query = list(V.name = include("IG")),
.match = "substring")
immdata_low_tcr$meta <- immdata_low$meta[immdata_low$meta$Sample %in%
names(immdata_low_tcr$data),]
immdata_high_tcr$meta <- immdata_high$meta[immdata_high$meta$Sample %in%
names(immdata_high_tcr$data),]
immdata_low_bcr$meta <- immdata_low$meta[immdata_low$meta$Sample %in%
names(immdata_low_bcr$data),]
immdata_high_bcr$meta <- immdata_high$meta[immdata_high$meta$Sample %in%
names(immdata_high_bcr$data),]
# -- dist: group sequence by V.name, J.name and length CDR3
dist_high_BCR <- seqDist(immdata_high_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_high_BCR <- seqCluster(immdata_high_bcr$data, dist_high_BCR, .perc_similarity = 0.9)
dist_low_BCR <- seqDist(immdata_low_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_low_BCR <- seqCluster(immdata_low_bcr$data, dist_low_BCR, .perc_similarity = 0.9)
dist_high_TCR <- seqDist(immdata_high_tcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_high_TCR <- seqCluster(immdata_high_tcr$data, dist_high_TCR, .perc_similarity = 0.95)
clust_high_TCR <- seqCluster(immdata_high_tcr$data, dist_high_TCR, .perc_similarity = 0.95)
View(immdata_high_tcr)
View(dist_high_TCR)
dist_high_TCR$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`
# -- dist: group sequence by V.name, J.name and length CDR3
dist_high_BCR <- seqDist(immdata_high_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_high_BCR <- seqCluster(immdata_high_bcr$data, dist_high_BCR, .perc_similarity = 0.9)
dist_low_BCR <- seqDist(immdata_low_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_low_BCR <- seqCluster(immdata_low_bcr$data, dist_low_BCR, .perc_similarity = 0.9)
dist_high_TCR <- seqDist(immdata_high_tcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_high_TCR <- seqCluster(immdata_high_tcr$data, dist_high_TCR, .perc_similarity = 0.95)
dist_high_TCR$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`
immdata_high_tcr$data$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`
immdata_high_tcr$data$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report` <-
as.data.frame(immdata_high_tcr$data$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`)
dist_high_TCR <- seqDist(immdata_high_tcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_high_TCR <- seqCluster(immdata_high_tcr$data, dist_high_TCR, .perc_similarity = 0.95)
clust_high_TCR <- seqCluster(immdata_high_tcr$data, dist_high_TCR, .perc_similarity = 0.95)
immdata_high_tcr$data$`130723_UNC9-SN296_0386_BC2E4WACXX_TAGCTT_L006_report`
rlang::last_trace()
rlang::last_trace(drop = FALSE)
dist_low_TCR <- seqDist(immdata_low_tcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.aa")
clust_low_TCR <- seqCluster(immdata_low_tcr$data, dist_low_TCR, .perc_similarity = 0.95)
View(clust_low_TCR)
immdata_bcr <- repFilter(immdata,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
immdata$meta$Sample <- paste(immdata$meta$sample_id,"_report",sep = "")
immdata_bcr <- repFilter(immdata,
.method = "by.clonotype",
.query = list(V.name = include("IG")),
.match = "substring")
immdata_tcr <- repFilter(immdata,
.method = "by.clonotype",
.query = list(V.name = include("TR")),
.match = "substring")
# -- dist: group sequence by V.name, J.name and length CDR3
dist_BCR <- eqDist(immdata_bcr,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
# -- dist: group sequence by V.name, J.name and length CDR3
dist_BCR <- eqDist(immdata_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
# -- dist: group sequence by V.name, J.name and length CDR3
dist_BCR <- seqDist(immdata_bcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_BCR <- seqCluster(immdata_bcr$data, dist_BCR, .perc_similarity = 0.9)
dist_TCR <- seqDist(immdata_tcr$data,
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_TCR <- seqCluster(immdata_tcr$data, dist_TCR, .perc_similarity = 0.95)
dist_TCR <- seqDist(immdata_tcr$data[-12],
.group_by = c("V.name", "J.name"),
.group_by_seqLength = TRUE,
.col = "CDR3.nt")
clust_TCR <- seqCluster(immdata_tcr$data[-12], dist_TCR, .perc_similarity = 0.95)
clust_TCR
